--------------------------------------------------------------------
Reunião 18/03
Dúvidas:
  - Todos os packages podem acabar por estar também no dataset de aplicações. O que é que caracterizamos só como packages e como apps? packages criados são para benchmarks e verdadeiras são para ultimo dataset
  - Preferível ter tudo num container para aceder pelo localhost? não
  - O que fazer agora?

Durante:
comprar domain (dominios.pt) e usar letsEncrypt
entry point e sinks

-----------------------------------------------------------------------
Reunião 25/03
Dúvidas:
  - Consideramos como sink o request ou quando damos log do req? req
  - axios sink.
  - osm-static-maps ssrf não está resolvido
  - fuxa não tem patch por isso 1.2.4 ainda é vuln
  - ssrf-agent não está resolvido
  - ssrf-agent não tem sink porque isto é má validação que resulta em SSRF
  - jsreport ainda é vulneravel

Durante:
 - ngrok
 - quando tenho app guardar as 2 sources (app e pac) e 2 sinks; function call dentro da app;
 - experimentar versoes atuais osm-static-maps (4.2.0)

-----------------------------------------------------------------------
Reunião 01/04
Dúvidas:
  - osm-static-maps ssrf não está resolvido no 3.10.1 mas 3.11.0 o download não funciona
  - jsreport ainda é vulneravel

Durante:
  

-----------------------------------------------------------------------
Reunião 08/04
Dúvidas:
  - desmotivado
  - o que fazer a seguir?

Durante:
  - 1ºpasso:
    - fazer modulos que deem flag às queries do graphjs (injection)
    - fazer modulos que não deem flag no graphjs (perceber queries) (injection)
  2º passo:
    - colocar sinks e sources ssrf no config
    - fazer query para ssrf básica ()
    - fazer modulo para bater na ssrf basica
    - ir incrementando a query
  3º passo:
    - passar vuln estudadas para modulo 
    - ver se query dá flag ao modulo

-----------------------------------------------------------------------
Reunião 24/04
Dúvidas:
    - que sources e sinks posso colocar?
    - manter query de injection inicialmente ou fazer já uma coisa elaborada?
  
Durante:
  - fazer novas classes para nova query, baseada na injection (alterar sinks e sources)
  - correr module basico com axios ou http

-----------------------------------------------------------------------
Reunião 08/05
Dúvidas:
    - no folder problems temos exemplos em que não deteta no mesmo file mas deteta em files diff, e acho que devia detetar (ping guilherme)
    - deteta vuln no intra_injection/not_flagged/input/case2 quando não devia detetar (normal)
    - já tenho alguns exemplos feitos para ssrf (2 vulns diff no unidici)
    - há casos em que não só é necessario um sink como também uma options especifica
    - preciso do dataset anotado porque não sei qual é a norma para processar multiplos files
    - caso da maquina que o stor deu

-----------------------------------------------------------------------

Reunião 15/05
Dúvidas:
    - axios (o problema é na sanitização)
    - há um teste que verifica secure_return_caller e de facto não há vuln reportadas mas quando são files diff deteta
    - queria a lista anotada para saber como está a estrutura dos modulos 
    - num dos ultimos commits eles colocaram uma opção para analisar todo o dataset (vulcan, secbench, etc), mas não colocaram no github os tais datasets


Durante:
    - marcar como vulnerabilidade e passou numa potencial sanitização
    - mandar mail a Mafalda sobre datasets do Graphjs (como funcionam a função de analisar datasets)
    - falar com guilherme sobre exemplos de FP
-----------------------------------------------------------------------

Reunião 22/05
Problemas:
    - leitura de pacotes no config.json:
        - quando usamos um require no pacote e o resultado é uma função (index1) temos 2 problemas:
            - não é considerada função mas sim alias e por isso não é detetada
            - quando utilizada como parametro x.x não é detetada
        - 
Dúvidas:
    
vulnerabilidades:
    - axios: erro no esprisma parsing
    - cors-proxy: não consigo identificar o fetch como sink
    - link-preview-js: funciona com o package certo
    - node-pdf-generator: mesmo problema do fetch
    - phantom-seo: funciona mas damos flag a todas as funcoes open
    - ssrf-req-filter: funciona mas damos flag a todas as funcoes call (nem sei se é aqui que acontece o request ou no socket.on)
    - svg2png: não deteta provalmente por não detetar source to sink
    - undici: erro no esprima parsing


Durante:
    - verificar o que se passa no graph do countercase e nao passa no case:
        - ENCONTREI PROBLEMA: no countercase há uma veri que é validada porque o flow vai para fora do ficheiro e bate no undefined do set_this_undefined_calls, no entanto no case não é validada porque o data flow não vai para outro file nem conta como return
        para mostrar ao stor ver case normal como não é validade, é validada no countercase e nã sendo validada no case1 esse conta como return e aparece validada pelor return
    - ver se o erro origina dos node_module/ (verificar se isto acontece por ir buscar typescript):
        - VERDADE (quando o módulo é feito em typescript)
    - como é que o parser:
        -tenho alguma ideia
    - ver datasets e como correr datasets
-----------------------------------------------------------------------
Reunião 29/05
Problemas:

Dúvidas:



Durante:

-----------------------------------------------------------------------
Reunião 05/06
vulnerabilidades:
    - axios: erro no esprisma parsing
    - cors-proxy: não consigo identificar data flow mas consigo identificar fetch
    - link-preview-js: funciona com o package certo
    - node-pdf-generator: funciona mas damos flag a todas as funcoes htmlToPdf
    - phantom-seo: funciona mas damos flag a todas as funcoes open
    - ssrf-req-filter: funciona mas damos flag a todas as funcoes call (nem sei se é aqui que acontece o request ou no socket.on)
    - svg2png: não deteta provalmente por não detetar source to sink
    - undici: erro no esprima parsing

Problemas:
  - quando lidamos com nested functions, anonymous functions e higher-order exports precisamos de dar export a todas as funções ou corremos o risco do analiser não ver a função
  - não deteta se tentarmos dar require de uma função e.g, (apenas para ficheiros não modulos)
  const { helper } = require('./helper')
  mas sim, se dermos require a um file e depois usarmos uma função
  const helper = require('./helper')
  - não deteta quando está (wrapped inside closure, hidden inside nested return function)
  Basicamente o que isto quer dizer é que não deteta quando uma função retorna outra e só depois podemos usar esse return para chamar a função que queremos

Informação sobre parsing de modulos:
  - não necessitamos de ter o node_modules localmente para detetar
  - passa pelo modulo se o tivermos localmente (não sei se é necessário)



Durante:
  - mudar parser
  - quando temos anonymous exportada dar-lhe o nome do require dela no chamante

-----------------------------------------------------------------------
Reunião 12/06


Durante:
  - mudar express_app para ter funçoes normais em que os param são o metodo do route; req, res (com o nome do /)
  - ver parsing do primeiro problema e da factory function

-----------------------------------------------------------------------
Reunião 20/06

  Trabalho: 
    - Consegui detetar o meu exemplo mas não o módulo por causa do acrescimo de dificuldade (muito dificil fazer o tracing the params sendo que não há nenhum param ligado à chamada do middleware)
    - Consegui detetar o { g }
    - Consegui detetar return {data: userInput};
    - Consegui dar fix ao FP do returnLiteral
    - Consegui detetar a app mas tenho problema no await

  Dúvidas: 
    - await 
    - factory function no appToModule
    - papel que o colega lhe vai dar
    - criar outra key para login na vm


  Durante:
    - ver guilherme
    - tirar async
    - ver o que estoura appToModule
    - ver cors com neo4j queries
    - factoryFunction vai ter de ver as 2 func
    - ver caso em que usa param do createMidd

Reunião 1/07

  Trabalho: 
    - falei com o guilherme, ele testou com a ae e usou os datasets que lá estavam mas somou os TFP ao TFP
    - já tenho proProcessor
    - o erro no EPIPE vem de gerar o grafo

  Dúvidas: 
    


  Durante:
    - ver cors com neo4j queries
    - factoryFunction vai ter de ver as 2 func
    - ver caso em que usa param do createMidd
    - criar app com modulo testado pelo guilherme para testar
    - middleware podem ser diff em diff metodos
    - testar processed app (possivel alteracao para next ser a proxima funcao)
    - verificar o FP que saiu

    - res.redirect é uma chamada a outro endpoint

Reunião 10/07

  Trabalho: 
    - middleware diff em diff metodos
    - processed app tem agora o CFG funcional
    - criar app com modulo testado pelo guilherme para testar

  Dúvidas: 
    - Para criar o processed_output dentro do output tenho de colocar todos os outros ficheiros dentro do processed para o grafo ser feito, ora isto leva tempo
        - 2 soluções:
            - criar o processed dentro do input e assim não tenho de copiar ficheiros
            - copiar apenas os ficheiros required pelos ficheiros de forma recursiva (mais dificil)


  Durante:
   









TODO
- entry point e sinks
- ver os que não fiz
- passar os que não têm docker para docker

REVER:
- ssrf-agent não está resolvido
- ssrf-agent não tem sink porque isto é má validação que resulta em SSRF

